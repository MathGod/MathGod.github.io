<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mathgod.github.io/</id>
    <title>老王博客</title>
    <updated>2020-05-07T23:32:17.566Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mathgod.github.io/"/>
    <link rel="self" href="https://mathgod.github.io/atom.xml"/>
    <subtitle>博学笃信，与时俱进。</subtitle>
    <logo>https://mathgod.github.io/images/avatar.png</logo>
    <icon>https://mathgod.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 老王博客</rights>
    <entry>
        <title type="html"><![CDATA[我眼中的韭菜]]></title>
        <id>https://mathgod.github.io/jiucai</id>
        <link href="https://mathgod.github.io/jiucai">
        </link>
        <updated>2020-05-07T03:36:10.000Z</updated>
        <content type="html"><![CDATA[<p>炒股散户</p>
<p>楼市接盘者</p>
<p>培训报班的</p>
<p>买名牌化妆品，鞋子，包包，首饰之类的</p>
<p>阿里云9.9注册公司的(没实力就去创业的)</p>
<p>医美整形</p>
<p>技校里被安排去工厂流水线实习的学生</p>
<p>办理信用卡</p>
<p><strong>除了楼市接盘是迫不得已，其他还是能依靠清醒的头脑避免的</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[做网站是没有前途的]]></title>
        <id>https://mathgod.github.io/DuZOrHmTA</id>
        <link href="https://mathgod.github.io/DuZOrHmTA">
        </link>
        <updated>2020-05-06T11:36:34.000Z</updated>
        <summary type="html"><![CDATA[<p>做网站是没有前途的</p>
<p>现在还在做网站是不是疯了</p>
<p>没有前途的</p>
<p>我也是闲的</p>
]]></summary>
        <content type="html"><![CDATA[<p>做网站是没有前途的</p>
<p>现在还在做网站是不是疯了</p>
<p>没有前途的</p>
<p>我也是闲的</p>
<!-- more -->
<p>人家为什么要来你的网站发帖、看帖子？</p>
<p>这个问题就是一个死结</p>
<p>没人发帖，就没人来看</p>
<p>没人看帖，就没人来发</p>
<p>有做网站的时间和精力，应该好好思考下互联网如何更好的服务于人类</p>
<p>如何摆脱限制个体自由交流的系统</p>
<p>如何创造个体能够自由交流的系统</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[冰雹猜想]被证明了？？]]></title>
        <id>https://mathgod.github.io/fmyYtoKOO</id>
        <link href="https://mathgod.github.io/fmyYtoKOO">
        </link>
        <updated>2020-05-03T13:19:32.000Z</updated>
        <summary type="html"><![CDATA[<p>前两天，诗人白言在知乎发文章称已证明冰雹猜想并发表到arXiv。<br>
https://zhuanlan.zhihu.com/p/137766539<br>
 <br>
<strong>什么是冰雹猜想？</strong><br>
30多年前，日本数学家角谷静发现了一个奇怪的现象：一个自然数，如果它是偶数，那么用2除它；如果商是奇数，将它乘以3之后再加上1，这样反复运算，最终必然得1。</p>
]]></summary>
        <content type="html"><![CDATA[<p>前两天，诗人白言在知乎发文章称已证明冰雹猜想并发表到arXiv。<br>
https://zhuanlan.zhihu.com/p/137766539<br>
 <br>
<strong>什么是冰雹猜想？</strong><br>
30多年前，日本数学家角谷静发现了一个奇怪的现象：一个自然数，如果它是偶数，那么用2除它；如果商是奇数，将它乘以3之后再加上1，这样反复运算，最终必然得1。</p>
<!-- more -->
<p>比如，取自然数n＝6，按角谷静的作法有：6÷2＝3，3×3＋1＝10，10÷2＝5，5×3＋1＝16，16÷2＝8，8÷2＝4，4÷2＝2，2÷2＝1，从6开始经历了3→10→5→16→8→4→2→1，最后得1。<br>
找个大数试试，取n＝16384。</p>
<p>16384÷2＝8192，8192÷2＝4096，4096÷2＝2048，2048÷2＝1024，1024÷2＝512，512÷2＝256，256÷2＝128，128÷2＝64，64÷2＝32，32÷2＝16，16÷2＝8，8÷2＝4，4÷2＝2，2÷2＝1，这个数连续用2除了14次，最后还是得1。</p>
<p>这个有趣的现象引起了许多数学爱好者的兴趣，一位美国数学家说：“有一个时期，在美国的大学里，它几乎成了最热门的话题，数学系和计算机系的大学生，差不多人人都在研究它。”人们在大量演算中发现，算出来的数字忽大忽小，有的过程很长，比如27算到1要经过112步，有人把演算过程形容为云中的小水滴，在高空气流的作用下，忽高忽低，遇冷成冰，体积越来越大，最后变成冰雹落了下来，而演算的数字最后也像冰雹一样掉下来，变成了1！选数学家把角谷静这一发现，称为“角谷猜想”或“冰雹猜想”。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[github pages挂了]]></title>
        <id>https://mathgod.github.io/2T4yDLUvz</id>
        <link href="https://mathgod.github.io/2T4yDLUvz">
        </link>
        <updated>2020-03-26T13:02:34.000Z</updated>
        <content type="html"><![CDATA[<p>证书出问题了</p>
<p>听说是给某初学者的中间人攻击搞挂了</p>
<p>全国都有影响</p>
<p>博客只能fq才能打开了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[在公司的最后一晚]]></title>
        <id>https://mathgod.github.io/baG79mkdg</id>
        <link href="https://mathgod.github.io/baG79mkdg">
        </link>
        <updated>2020-03-19T14:07:40.000Z</updated>
        <summary type="html"><![CDATA[<p>一个月前的2月20号跟部门领导提出辞职，(领导很理解也表示很早就知道我迟早会辞职的）明天3月20号正式辞工离开公司。算起来一共呆了8个月零20天。<br>
 <br>
本想找到下家再走，父母也说这样保险点。但住在工厂的多人间连最基本的正常休息都无法保证，实在是对找工作有严重影响，所以还是回家休息好，以最好的精神状态寻找下一份工作。</p>
]]></summary>
        <content type="html"><![CDATA[<p>一个月前的2月20号跟部门领导提出辞职，(领导很理解也表示很早就知道我迟早会辞职的）明天3月20号正式辞工离开公司。算起来一共呆了8个月零20天。<br>
 <br>
本想找到下家再走，父母也说这样保险点。但住在工厂的多人间连最基本的正常休息都无法保证，实在是对找工作有严重影响，所以还是回家休息好，以最好的精神状态寻找下一份工作。</p>
<!-- more -->
<p>我对这公司的定义是非走不可的，没进公司前我就估计到，当初也是经历<strong>无数</strong>意外才不得已进了这公司，隐忍了8个多月也是不容易。</p>
<p>既然有广东择业期政策，作为19届往届生我还是想拼搏一次，以应届生待遇进个安稳点的国企。<br>
<img src="https://mathgod.github.io//post-images/1584629457857.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一键为网站添加夜间模式]]></title>
        <id>https://mathgod.github.io/yejianmoshi</id>
        <link href="https://mathgod.github.io/yejianmoshi">
        </link>
        <updated>2020-02-24T12:41:13.000Z</updated>
        <summary type="html"><![CDATA[<p>直接在博客任意位置如footer.php文件插入js代码</p>
]]></summary>
        <content type="html"><![CDATA[<p>直接在博客任意位置如footer.php文件插入js代码</p>
<!-- more -->
<pre><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/darkmode-js@1.5.5/lib/darkmode-js.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  new Darkmode({left: '32px',label: '🌓'}).showWidget();
&lt;/script&gt;
</code></pre>
<p>演示：点击左下角按键</p>
<p>具体配置可到官网https://darkmodejs.learn.uno/</p>
<h2 id="注意">注意</h2>
<p>不要使用360浏览器！<br>
不要使用360浏览器！<br>
360浏览器兼容性不好。会出现严重闪屏、内容缺失的奇怪问题，谷歌和火狐浏览器则正常。</p>
<p>下面是内核版本一样的两个360浏览器的效果<br>
<img src="https://mathgod.github.io//post-images/1582800380832.jpg" alt="" loading="lazy"><br>
无法显示内容<br>
<img src="https://mathgod.github.io//post-images/1582800450401.jpg" alt="" loading="lazy"><br>
左右两侧没有变黑<br>
 <br>
<img src="https://mathgod.github.io//post-images/1582800591465.jpg" alt="" loading="lazy"><br>
谷歌和火狐浏览器则正常</p>
<h2 id="问题点">问题点</h2>
<p>代码框与代码无变化<br>
背景图片会被自动隐藏，所以该模式不适合放在有背景图片的博客首页，放在内容页比较好。</p>
<script src="https://cdn.jsdelivr.net/npm/darkmode-js@1.5.5/lib/darkmode-js.min.js"></script>
<script>
  new Darkmode({left: '32px',label: '🌓'}).showWidget();
</script>
<script>
    	alert("为保证浏览效果，请勿使用360，Safari等浏览器，建议使用谷歌火狐");
    </script>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PWA技术使用规律学习笔记]]></title>
        <id>https://mathgod.github.io/CZYN-poCW</id>
        <link href="https://mathgod.github.io/CZYN-poCW">
        </link>
        <updated>2020-02-21T09:26:08.000Z</updated>
        <summary type="html"><![CDATA[<p>PWA全称Progressive Web App，即渐进式WEB应用。<br>
 <br>
近年来逐渐流行，它主要功能是再移动端自动弹出添加网站到桌面图标的提示。可避免开发原生APP昂贵成本且用户免安装更新，对APP开发者和用户都有好处。<br>
 <br>
安卓阵营浏览器几乎都支持，只差苹果了。经过测试，常用网站中支持PWA的有百度，哔哩哔哩，微博，推特。个人博客中使用的还是较少数，可能是大家还没发现。<br>
 <br>
看了上十篇PWA相关文章再反复测试，发现了一些使用规律。</p>
]]></summary>
        <content type="html"><![CDATA[<p>PWA全称Progressive Web App，即渐进式WEB应用。<br>
 <br>
近年来逐渐流行，它主要功能是再移动端自动弹出添加网站到桌面图标的提示。可避免开发原生APP昂贵成本且用户免安装更新，对APP开发者和用户都有好处。<br>
 <br>
安卓阵营浏览器几乎都支持，只差苹果了。经过测试，常用网站中支持PWA的有百度，哔哩哔哩，微博，推特。个人博客中使用的还是较少数，可能是大家还没发现。<br>
 <br>
看了上十篇PWA相关文章再反复测试，发现了一些使用规律。</p>
<!-- more -->
<p>先看效果<br>
 <br>
移动端<br>
<img src="https://mathgod.github.io//post-images/1582279031262.jpg" alt="" loading="lazy"><br>
<img src="https://mathgod.github.io//post-images/1582279055237.jpg" alt="" loading="lazy"><br>
谷歌浏览器<br>
<img src="https://mathgod.github.io//post-images/1582279080801.PNG" alt="" loading="lazy"><br>
<img src="https://mathgod.github.io//post-images/1582279099136.PNG" alt="" loading="lazy"><br>
<img src="https://mathgod.github.io//post-images/1582279108196.PNG" alt="" loading="lazy"></p>
<p>PWA并不是单指某一项技术，你更可以把它理解成是一种思想和概念，目的就是对标原生app，将Web网站通过一系列的Web技术去优化它，提升其安全性，性能，流畅性，用户体验等各方面指标，最后达到用户就像在用app一样的感觉。</p>
<p>PWA中包含的核心功能及特性如下：<br>
1.可以添加至主屏幕，点击主屏幕图标可以实现启动动画以及隐藏地址栏<br>
2.实现离线缓存功能，即使用户手机没有网络，依然可以使用一些离线功能<br>
3.实现了消息推送</p>
<h3 id="使用方法">使用方法</h3>
<p>网站首页载入manifest.json文件</p>
<pre><code>&lt;link rel=&quot;manifest&quot; href=&quot;manifest.json&quot;&gt;
</code></pre>
<p>manifest.json文件内容</p>
<pre><code>{
&quot;name&quot;: &quot;Hi,MathGod&quot;,
&quot;short_name&quot;: &quot;MathGod&quot;,
&quot;start_url&quot;: &quot;/&quot;,
&quot;display&quot;: &quot;standalone&quot;,
&quot;theme_color&quot;: &quot;#fff&quot;,
&quot;background_color&quot;: &quot;#fff&quot;,
&quot;icons&quot;: [
	{
		&quot;src&quot;: &quot;192.png&quot;,
		&quot;sizes&quot;: &quot;192x192&quot;,
		&quot;type&quot;: &quot;image/png&quot;
	}	
]   
}
</code></pre>
<p>引入sw.js</p>
<pre><code>&lt;script&gt;
if ('serviceWorker' in navigator) {
window.addEventListener('load', function() {
navigator.serviceWorker.register('/sw.js');
});
}
&lt;/script&gt;
</code></pre>
<p>sw.js文件内容</p>
<pre><code>self.addEventListener('fetch', function (evt) {
console.log('sw fetch() 发送的请求', evt.request.url)
})
</code></pre>
<p>最后加个图标文件192.png</p>
<h3 id="使用注意">使用注意</h3>
<p>上述代码和文件都必须放在网站首页面，不然无法实现功能。<br>
sw.js文件内容可以为空，甚至不存在此文件都能实现功能。只需要有引用sw.js的代码。<br>
甚至只需要第一次含有引用sw.js代码，网站打开过，然后把引用sw.js的程序删掉，只剩下载入manifest.json文件的代码和manifest.json文件本身，也可实现功能。</p>
<p>定时推送功能还在探索中...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[今天下午，跟部门领导提了离职。]]></title>
        <id>https://mathgod.github.io/tQztC8IEP</id>
        <link href="https://mathgod.github.io/tQztC8IEP">
        </link>
        <updated>2020-02-20T10:39:18.000Z</updated>
        <content type="html"><![CDATA[<p>很早就想提，却因种种原因拖到现在，今天终于下定决心。</p>
<p>领导拿个笔和纸，让我一起去小会议室，谈了很多。主要是表达对我的关心，找工作的方向状态等</p>
<p>部门领导是个善解人意，关爱员工的女性，比我大10岁左右。她很理解我的辞职的行为，因为公司的确历年来离职率非常高，留不住人，并表示早就看出我想离职。</p>
<p>因为公司管理某些方面比较僵化，辞职要提早一个月打招呼，有固定的辞职日20号和7号。如果严格按照这种规则，我今天2月20号不提离职的话，就最早只能3月7号提，则4月7号才能走人。这正是我最担心的一点，4月再走怕是会耽误了春招。</p>
<p><em>今天很累，有空再写...</em></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nodejs是用来做什么的]]></title>
        <id>https://mathgod.github.io/ZgezxDefR</id>
        <link href="https://mathgod.github.io/ZgezxDefR">
        </link>
        <updated>2020-02-17T11:41:00.000Z</updated>
        <summary type="html"><![CDATA[<p>如果你去年注意过技术方面的新闻，我敢说你至少看到node.js不下一两次。那么问题来了“node.js是什么？”。有些人没准会告诉你“这是一种通过JavaScript语言开发web服务端的东西”。如果这种晦涩解释还没把你搞晕，你没准会接着问：“为什么我们要用node.js？”，别人一般会告诉你：node.js有非阻塞，事件驱动I/O等特性，从而让高并发（high concurrency）在的轮询（Polling）和comet构建的应用中成为可能。<br>
 <br>
当你看完这些解释觉得跟看天书一样的时候，你估计也懒得继续问了。不过没事。我这篇文章就是在避开高端术语的同时，帮助你你理解node.js的。<br>
 <br>
浏览器给网站发请求的过程一直没怎么变过。当浏览器给网站发了请求。服务器收到了请求，然后开始搜寻被请求的资源。如果有需要，服务器还会查询一下数据库，最后把响应结果传回浏览器。不过，在传统的web服务器中（比如Apache），每一个请求都会让服务器创建一个新的进程来处理这个请求。<br>
 </p>
]]></summary>
        <content type="html"><![CDATA[<p>如果你去年注意过技术方面的新闻，我敢说你至少看到node.js不下一两次。那么问题来了“node.js是什么？”。有些人没准会告诉你“这是一种通过JavaScript语言开发web服务端的东西”。如果这种晦涩解释还没把你搞晕，你没准会接着问：“为什么我们要用node.js？”，别人一般会告诉你：node.js有非阻塞，事件驱动I/O等特性，从而让高并发（high concurrency）在的轮询（Polling）和comet构建的应用中成为可能。<br>
 <br>
当你看完这些解释觉得跟看天书一样的时候，你估计也懒得继续问了。不过没事。我这篇文章就是在避开高端术语的同时，帮助你你理解node.js的。<br>
 <br>
浏览器给网站发请求的过程一直没怎么变过。当浏览器给网站发了请求。服务器收到了请求，然后开始搜寻被请求的资源。如果有需要，服务器还会查询一下数据库，最后把响应结果传回浏览器。不过，在传统的web服务器中（比如Apache），每一个请求都会让服务器创建一个新的进程来处理这个请求。<br>
 </p>
<!-- more -->
<p>后来有了Ajax。有了Ajax，我们就不用每次都请求一个完整的新页面了，取而代之的是，每次只请求需要的部分页面信息就可以了。这显然是一个进步。但是比如你要建一个FriendFeed这样的社交网站（类似人人网那样的刷朋友新鲜事的网站），你的好友会随时的推送新的状态，然后你的新鲜事会实时自动刷新。要达成这个需求，我们需要让用户一直与服务器保持一个有效连接。目前最简单的实现方法，就是让用户和服务器之间保持长轮询（long polling）。<br>
 <br>
HTTP请求不是持续的连接，你请求一次，服务器响应一次，然后就完了。长轮训是一种利用HTTP模拟持续连接的技巧。具体来说，只要页面载入了，不管你需不需要服务器给你响应信息，你都会给服务器发一个Ajax请求。这个请求不同于一般的Ajax请求，服务器不会直接给你返回信息，而是它要等着，直到服务器觉得该给你发信息了，它才会响应。比如，你的好友发了一条新鲜事，服务器就会把这个新鲜事当做响应发给你的浏览器，然后你的浏览器就刷新页面了。浏览器收到响应刷新完之后，再发送一条新的请求给服务器，这个请求依然不会立即被响应。于是就开始重复以上步骤。利用这个方法，可以让浏览器始终保持等待响应的状态。虽然以上过程依然只有非持续的Http参与，但是我们模拟出了一个看似持续的连接状态<br>
 <br>
我们再看传统的服务器（比如Apache）。每次一个新用户连到你的网站上，你的服务器就得开一个连接。每个连接都需要占一个进程，这些进程大部分时间都是闲着的（比如等着你好友发新鲜事，等好友发完才给用户响应信息。或者等着数据库返回查询结果什么的）。虽然这些进程闲着，但是照样占用内存。这意味着，如果用户连接数的增长到一定规模，你服务器没准就要耗光内存直接瘫了。<br>
 <br>
这种情况怎么解决？解决方法就是刚才上边说的：<strong>非阻塞</strong>和<strong>事件驱动</strong>。这些概念在我们谈的这个情景里面其实没那么难理解。你把非阻塞的服务器想象成一个loop循环，这个loop会一直跑下去。一个新请求来了，这个loop就接了这个请求，把这个请求传给其他的进程（比如传给一个搞数据库查询的进程），然后响应一个回调（callback）。完事了这loop就接着跑，接其他的请求。这样下来。服务器就不会像之前那样傻等着数据库返回结果了。<br>
 <br>
如果数据库把结果返回来了，loop就把结果传回用户的浏览器，接着继续跑。在这种方式下，你的服务器的进程就不会闲着等着。从而在理论上说，同一时刻的数据库查询数量，以及用户的请求数量就没有限制了。服务器只在用户那边有事件发生的时候才响应，这就是<strong>事件驱动</strong>。<br>
 <br>
FriendFeed是用基于Python的<strong>非阻塞</strong>框架Tornado (知乎也用了这个框架) 来实现上面说的新鲜事功能的。不过，Node.js就比前者更妙了。Node.js的应用是通过javascript开发的，然后直接在Google的变态V8引擎上跑。用了Node.js，你就不用担心用户端的请求会在服务器里跑了一段能够造成阻塞的代码了。因为javascript本身就是事件驱动的脚本语言。<br>
 <br>
你回想一下，在给前端写javascript的时候，更多时候你都是在搞事件处理和回调函数。javascript本身就是给事件处理量身定制的语言。Node.js还是处于初期阶段。如果你想开发一个基于Node.js的应用，你应该会需要写一些很底层代码。但是下一代浏览器很快就要采用WebSocket技术了，从而长轮询也会消失。在Web开发里，Node.js这种类型的技术只会变得越来越重要。<br>
 <br>
作者：厂长<br>
链接：https://www.zhihu.com/question/<br>
33578075/answer/56951771<br>
来源：知乎<br>
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[markdown插入代码块和代码高亮语法]]></title>
        <id>https://mathgod.github.io/cpWjmHxi9</id>
        <link href="https://mathgod.github.io/cpWjmHxi9">
        </link>
        <updated>2020-02-13T01:36:58.000Z</updated>
        <summary type="html"><![CDATA[<p><em>浏览别技术博客时经常能看到代码块，预想写教程时免不了要插入代码，于是今天花了一个早上研究了markdown代码块语法，并顺便写个教程。</em><br>
 </p>
<h2 id="单行代码">单行代码</h2>
<h3 id="方法">方法：</h3>
<p>代码之间分别用一个反引号包起来</p>
<pre><code class="language-markdown">'Hello World'
</code></pre>
<h3 id="效果">效果：</h3>
<p><code>Hello World</code></p>
<p> <br>
 </p>
<h2 id="多行代码">多行代码</h2>
<h3 id="方法-2">方法:</h3>
<p>代码之间分别用三个反引号```包起来，且两边的反引号各单独占一行。</p>
<pre><code>```
function fun(){
echo $a;
echo &quot;这是一句非常牛逼的代码&quot;;
print(&quot;Hello, World!&quot;);
}
```
</code></pre>
<h3 id="效果-2">效果：</h3>
<pre><code>function fun(){
  echo $a;
  echo &quot;这是一句非常牛逼的代码&quot;;
  print(&quot;Hello, World!&quot;);
}
fun();
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<p><em>浏览别技术博客时经常能看到代码块，预想写教程时免不了要插入代码，于是今天花了一个早上研究了markdown代码块语法，并顺便写个教程。</em><br>
 </p>
<h2 id="单行代码">单行代码</h2>
<h3 id="方法">方法：</h3>
<p>代码之间分别用一个反引号包起来</p>
<pre><code class="language-markdown">'Hello World'
</code></pre>
<h3 id="效果">效果：</h3>
<p><code>Hello World</code></p>
<p> <br>
 </p>
<h2 id="多行代码">多行代码</h2>
<h3 id="方法-2">方法:</h3>
<p>代码之间分别用三个反引号```包起来，且两边的反引号各单独占一行。</p>
<pre><code>```
function fun(){
echo $a;
echo &quot;这是一句非常牛逼的代码&quot;;
print(&quot;Hello, World!&quot;);
}
```
</code></pre>
<h3 id="效果-2">效果：</h3>
<pre><code>function fun(){
  echo $a;
  echo &quot;这是一句非常牛逼的代码&quot;;
  print(&quot;Hello, World!&quot;);
}
fun();
</code></pre>
<!-- more -->
<p> <br>
 </p>
<h2 id="代码高亮">代码高亮</h2>
<h3 id="方法-3">方法：</h3>
<p>在第一行的三个反引号```后面加php或python等词可代码高亮。</p>
<pre><code>```php
function fun(){
 $a=123;
 echo &quot;这是一句非常牛逼的代码&quot;;
 print(&quot;Hello, World!&quot;);
}
fun();
```  
</code></pre>
<p> </p>
<pre><code>```python
function fun(){
 $a=123;
 echo &quot;这是一句非常牛逼的代码&quot;;
 print(&quot;Hello, World!&quot;);
}
fun();
```
</code></pre>
<h3 id="加php的效果">加php的效果：</h3>
<pre><code class="language-php">function fun(){
  $a=123;
  echo &quot;这是一句非常牛逼的代码&quot;;
  print(&quot;Hello, World!&quot;);
}
fun();
</code></pre>
<h3 id="加python的效果">加python的效果：</h3>
<pre><code class="language-python">function fun(){
  $a=123;
  echo &quot;这是一句非常牛逼的代码&quot;;
  print(&quot;Hello, World!&quot;);
}
fun();
</code></pre>
<p> <br>
 </p>
<h2 id="防转译">防转译</h2>
<h3 id="方法-4">方法：</h3>
<p>每行缩进 4 个空格，缩进式插入前方必须有空行。</p>
<h3 id="作用">作用 ：</h3>
<p>此方法可防止转译，主要用来写教程，因为教程的示例代码不长，每行单独空四格也不会浪费太多时间，而展示太长代码则此方法不适用。</p>
]]></content>
    </entry>
</feed>